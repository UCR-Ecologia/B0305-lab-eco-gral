---
subtitle: "B0305 -- Lab Eco Gral<br><a href='https://<https://ucr-ecologia.github.io/B0305-lab-eco-gral/>' target='_blank'>https://ucr-ecologia.github.io/B0305-lab-eco-gral/</a>"
title: "<font style='font-size:1em;'> Modelado en R</font>"
author: Prof. G. Avalos y T. Nakov
institute: 'Escuela de Biologia, Universidad de Costa Rica'
date: 01 August 2025
date-meta: 01 August 2025
date-format: "DD MMM YYYY"
toc: true
toc-depth: 1
toc-title: "Que vamos a ver:"
center-title-slide: false
from: markdown+emoji
format:
  revealjs: 
    fig-responsive: true
    theme: simple
    slide-number: true
    mouse-wheel: false
    preview-links: auto
    incremental: true
    logo: /figures/icons/course_favicon.png
    css: 
      - /css/styles_slides.css
      - custom.css
    footer: 'B0305 -- Lab Eco Gral'
execute:
  echo: true
  cache: false
---

# Introducci√≥n al Modelado

## ¬øQu√© es un modelo?

::: {.fragment}
### Definici√≥n

Un **modelo** es una representaci√≥n simplificada de un proceso o sistema real que nos ayuda a:

- **Entender** patrones en los datos

- **Predecir** valores futuros  

- **Probar hip√≥tesis** sobre mecanismos biol√≥gicos
:::

::: {.fragment}
### Ejemplo: Crecimiento de levaduras
Imaginemos que cultivamos levaduras en el laboratorio y medimos su densidad poblacional a lo largo del tiempo...

**¬øQu√© tipo de patr√≥n esperar√≠amos ver?** ü§î
:::

---

## Patr√≥n t√≠pico del crecimiento microbiano

::: {.fragment}
### Fase lag (retraso)

**Primeras horas:** Las c√©lulas se adaptan al medio, casi no hay crecimiento
:::

::: {.fragment}
### Fase exponencial (logar√≠tmica)

**Crecimiento r√°pido:** Recursos abundantes, las c√©lulas se dividen a m√°xima velocidad

- Duplicaci√≥n constante: 1 ‚Üí 2 ‚Üí 4 ‚Üí 8 ‚Üí 16...

- **¬°Patr√≥n exponencial!** $N(t) = N_0 \cdot e^{rt}$
:::

::: {.fragment}
### Fase estacionaria

**Recursos limitados:** Nutrientes se agotan, se acumulan toxinas

- **Capacidad de carga:** Densidad m√°xima que el medio puede sostener

- **Crecimiento se desacelera** hasta detenerse
:::

::: {.fragment}
### Resultado: **Curva sigmoidea (forma de S)**
*¬øQu√© modelo matem√°tico describe mejor este patr√≥n?* ü§î
:::

## La ecuaci√≥n de crecimiento exponencial

::: {.fragment}
**Durante la fase exponencial**, el crecimiento se describe con:  
$$N(t) = N_0 \cdot e^{rt}$$
:::

::: {.fragment}
**Donde:**  
- $N(t)$ = densidad poblacional en el tiempo $t$  
- $N_0$ = densidad poblacional inicial (en $t = 0$)    
- $r$ = tasa intr√≠nseca de crecimiento (por unidad de tiempo)  
- $e$ = base del logaritmo natural (‚âà 2.718)  
- $t$ = tiempo  
:::

::: {.fragment}
**Interpretaci√≥n biol√≥gica:**  
- Si $r > 0$: poblaci√≥n crece exponencialmente  
- Si $r = 0$: poblaci√≥n constante   
- Si $r < 0$: poblaci√≥n decrece exponencialmente  
:::

::: {.fragment}
**Problema:** Que pasa cuando se agotan los recursos?
:::

---

## Agregando capacidad de carga

::: {.fragment}
**Problema del modelo exponencial:** ¬°Crecimiento infinito es imposible!

En la realidad, los recursos son **limitados**:  
- Espacio f√≠sico finito  
- Nutrientes se agotan   
- Acumulaci√≥n de desechos t√≥xicos  
- Competencia entre individuos  
:::

::: {.fragment}
**Soluci√≥n:** Introducir la **capacidad de carga** ($K$)  

$$N(t) = \frac{K}{1 + \left(\frac{K-N_0}{N_0}\right)e^{-rt}}$$
:::

::: {.fragment}
**Par√°metros del modelo log√≠stico:**  
- $K$ = **capacidad de carga** (densidad m√°xima sostenible)  
- $r$ = tasa intr√≠nseca de crecimiento (cuando N << K)  
- $N_0$ = densidad inicial  
:::

::: {.fragment} 
**Comportamiento del modelo:**  
- Cuando $N \ll K$: crecimiento ‚âà exponencial  
- Cuando $N \approx K/2$: m√°xima tasa de crecimiento  
- Cuando $N \to K$: crecimiento se desacelera hacia cero  
:::

## Datos de crecimiento de levaduras

Datos de crecimiento de *Saccharomyces cerevisiae*:

```{r}
#| echo: false
# Crear datos de crecimiento de levaduras
set.seed(123)
tiempo <- seq(0, 24, by = 2)  # horas
# Crecimiento log√≠stico con ruido
K <- 1000  # capacidad de carga
r <- 0.3   # tasa de crecimiento
N0 <- 10   # poblaci√≥n inicial

densidad_real <- K / (1 + ((K - N0) / N0) * exp(-r * tiempo))
# A√±adir ruido realista
densidad <- densidad_real * exp(rnorm(length(tiempo), 0, 0.1))

# Crear data frame
levaduras <- data.frame(tiempo = tiempo, densidad = densidad)
levaduras
```

---

## Visualizar los datos

::: {.columns}

::: {.column width="60%"}

```{r}
#| eval: true
#| echo: true
library(ggplot2)

# Configurar tema global para todos los gr√°ficos
theme_set(theme_bw())

p1 <- ggplot(levaduras, aes(x = tiempo, y = densidad)) +
  geom_point(size = 3, color = "steelblue") +
  labs(x = "Tiempo (horas)", 
       y = "Densidad (c√©lulas/mL)",
       title = "Crecimiento de Saccharomyces cerevisiae")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 6
# Mostrar el gr√°fico
p1
```
:::

:::

**¬øQu√© patr√≥n observas? ¬øC√≥mo modelar√≠as este crecimiento?** ü§î

# Modelo 1: Regresi√≥n Lineal

## Intentemos un modelo lineal

**Hip√≥tesis ingenua:** La densidad aumenta linealmente con el tiempo

```{r}
#| echo: true
# Ajustar modelo lineal
modelo_lineal <- lm(densidad ~ tiempo, data = levaduras)
summary(modelo_lineal)
```

---

## Visualizar el ajuste lineal

::: {.columns}

::: {.column width="60%"}

```{r}
#| eval: true
#| echo: true
p2 <- ggplot(levaduras, aes(x = tiempo, y = densidad)) +
  geom_point(size = 3, color = "steelblue") +
  geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.2) +
  labs(x = "Tiempo (horas)", 
       y = "Densidad (c√©lulas/mL)",
       title = "Modelo Lineal: ¬øBuen ajuste?")
```
:::

::: {.column width="40%"}

```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 6
p2
```
:::

:::

**¬øQu√© problemas observas con este modelo?** üö®

---

## Diagn√≥sticos del modelo lineal

::: {.columns}
::: {.column}
::: {.fragment}
```{r}
#| echo: true
#| fig-height: 5
#| fig-width: 8
# Gr√°ficos de diagn√≥stico
par(mfrow = c(1, 2))
plot(modelo_lineal, which = 1:2)
```

::: {.fragment}
```{r}
predicciones <- predict(modelo_lineal)
tiempo_negativo <- levaduras$tiempo[predicciones < 0]
cat(
  "Tiempos con predicciones negativas:", 
  tiempo_negativo
)
```
:::

:::
:::
::: {.column}
::: {.fragment}
**Problemas evidentes:**  
- Residuos no aleatorios (patr√≥n curvo)  
- Heteroscedasticidad (varianza no constante)  
- ¬°El modelo predice densidades negativas!  
:::
:::
::: 


# Modelo 2: Regresi√≥n Log-Lineal

## Transformaci√≥n logar√≠tmica

::: {.columns}
::: {.column}
::: {.fragment}
**Nueva hip√≥tesis:** El crecimiento es exponencial (al menos inicialmente)

Si: $N(t) = N_0 \cdot e^{rt}$

Entonces: $\log(N(t)) = \log(N_0) + rt$
:::
:::
::: {.column}
::: {.fragment}
```{r}
#| echo: true
# Crear variable transformada
levaduras$log_densidad <- log(levaduras$densidad)

# Ajustar modelo log-lineal
modelo_log <- lm(log_densidad ~ tiempo, data = levaduras)
summary(modelo_log)
```
:::
:::
::: 

---

## Visualizar en escala logar√≠tmica

::: {.columns}

::: {.column width="60%"}
```{r}
#| eval: true
#| echo: true
p3 <- ggplot(levaduras, aes(x = tiempo, y = log_densidad)) +
  geom_point(size = 3, color = "darkgreen") +
  geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.2) +
  labs(x = "Tiempo (horas)", 
       y = "log(Densidad)",
       title = "Modelo Log-Lineal")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 6
p3
```
:::

:::

**¬øMejor ajuste en los primeros puntos, pero qu√© pasa despu√©s?** ü§î

---

## Comparar modelos en escala original

::: {.columns}

::: {.column width="60%"}
```{r}
#| eval: true
#| echo: true
# Predicciones del modelo log-lineal
levaduras$pred_log <- exp(predict(modelo_log))

p4 <- ggplot(levaduras, aes(x = tiempo, y = densidad)) +
  geom_point(size = 3, color = "steelblue") +
  geom_line(aes(y = pred_log), color = "darkgreen", size = 1.2) +
  labs(x = "Tiempo (horas)", 
       y = "Densidad (c√©lulas/mL)",
       title = "Modelo Log-Lineal vs Datos Reales")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 6
p4
```
:::

:::

**Problema:** ¬°Predice crecimiento exponencial infinito! üìà

# Modelo 3: Crecimiento Log√≠stico

## El modelo biol√≥gicamente realista

::: {.columns}
::: {.column}
::: {.fragment}
**Hip√≥tesis biol√≥gica:** Las poblaciones tienen una capacidad de carga limitada

$$N(t) = \frac{K}{1 + \left(\frac{K-N_0}{N_0}\right)e^{-rt}}$$

Donde:  
- $K$ = capacidad de carga (densidad m√°xima)  
- $r$ = tasa intr√≠nseca de crecimiento    
- $N_0$ = densidad inicial  
:::
:::

::: {.column}
::: {.fragment}
```{r}
#| echo: true
# Ajustar modelo log√≠stico usando nls()
# Non-linear least squares 
modelo_logistico <- nls(
  densidad ~ K / (1 + ((K - N0) / N0) * exp(-r * tiempo)),
  data = levaduras,
  start = list(K = 800, r = 0.2, N0 = 15)  # valores iniciales
)

summary(modelo_logistico)
```
:::
:::
::: 

---

## Visualizar el modelo log√≠stico

::: {.columns}

::: {.column width="60%"}
```{r}
#| eval: true
#| echo: true
levaduras$pred_logistico <- predict(modelo_logistico)

p5 <- ggplot(levaduras, aes(x = tiempo, y = densidad)) +
  geom_point(size = 3, color = "steelblue") +
  geom_line(aes(y = pred_logistico), color = "purple", size = 1.2) +
  labs(x = "Tiempo (horas)", 
       y = "Densidad (c√©lulas/mL)",
       title = "Modelo Log√≠stico: ¬°Ajuste Biol√≥gicamente Realista!")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 6
p5
```
:::

:::

---

## Comparaci√≥n de los tres modelos

::: {.columns}

::: {.column width="60%"}
```{r}
#| eval: true
#| echo: true
# Preparar datos para comparaci√≥n
levaduras$pred_lineal <- predict(modelo_lineal)
levaduras$pred_logistico <- predict(modelo_logistico)

p6 <- ggplot(levaduras, aes(x = tiempo, y = densidad)) +
  geom_point(size = 3, color = "steelblue") +
  geom_line(aes(y = pred_lineal, color = "Lineal"), 
            size = 1) +
  geom_line(aes(y = pred_log, color = "Log-lineal"), 
            size = 1) +
  geom_line(aes(y = pred_logistico, color = "Log√≠stico"), 
            size = 1) +
  scale_color_manual(values = c("Lineal" = "red", 
                               "Log-lineal" = "darkgreen", 
                               "Log√≠stico" = "purple")) +
  labs(x = "Tiempo (horas)", 
       y = "Densidad (c√©lulas/mL)",
       title = "Comparaci√≥n de Modelos",
       color = "Modelo")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 7
p6
```
:::

:::

# Evaluaci√≥n de Modelos

## Criterios de evaluaci√≥n

::: {.columns}
::: {.column}
::: {.fragment}
**¬øC√≥mo decidimos cu√°l modelo es mejor?**

1. **R¬≤ (coeficiente de determinaci√≥n)**
2. **An√°lisis de residuos**
3. **Interpretabilidad biol√≥gica**
4. **AIC/BIC** (Otras opciones mas avanzadas...)
:::
:::
::: {.column width="60%"}
::: {.fragment}
```{r}
#| echo: true
# Calcular R¬≤ para cada modelo
r2_lineal <- summary(modelo_lineal)$r.squared
r2_log <- summary(modelo_log)$r.squared

# Para modelo log√≠stico, tenemos que calcular R2 manualmente
# ss_total = suma total de cuadrados (variaci√≥n total en los datos)
ss_total <- sum((levaduras$densidad - mean(levaduras$densidad))^2)
# ss_residual = suma de cuadrados de residuos (variaci√≥n no explicada)
ss_residual <- sum(residuals(modelo_logistico)^2)
# R2 = 1 - (variaci√≥n no explicada / variaci√≥n total)
r2_logistico <- 1 - (ss_residual / ss_total)

data.frame(
  Modelo = c("Lineal", "Log-lineal", "Log√≠stico"),
  R_cuadrado = round(c(r2_lineal, r2_log, r2_logistico), 3)
)
```
:::
:::
::: 

---

## An√°lisis de residuos

::: {.columns}
::: {.column width="60%"}
```{r}
#| eval: true
#| echo: true
# Crear data frame con residuos
residuos_df <- data.frame(
  tiempo = rep(levaduras$tiempo, 3),
  residuos = c(residuals(modelo_lineal), 
               residuals(modelo_log), 
               residuals(modelo_logistico)),
  modelo = rep(c("Lineal", "Log-lineal", "Log√≠stico"), 
               each = nrow(levaduras))
)

p7 <- ggplot(residuos_df) +
  aes(x = tiempo, y = residuos, color = modelo) +
  geom_point(size = 2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~modelo, scales = "free_y") +
  labs(
    x = "Tiempo (horas)", 
    y = "Residuos",
    title = "An√°lisis de Residuos por Modelo") +
  theme(legend.position = "bottom")
```
:::

::: {.column width="40%"}
```{r}
#| eval: true
#| echo: true
#| fig-height: 6
#| fig-width: 8
p7
```
:::

:::

## Residuos - Comparaci√≥n visual

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 6
p7
```

**¬øQu√© modelo tiene los residuos m√°s aleatorios?** üéØ

---

## ‚ö†Ô∏è Cuidado con los residuos transformados

::: {.incremental}
- Los residuos del modelo **log-lineal** est√°n en **escala logar√≠tmica**
- No son directamente comparables con residuos en escala original
- Para comparar correctamente, necesitamos calcular residuos en la **misma escala**
:::

::: {.fragment}
```{r}
#| echo: true
# Residuos en escala original para todos los modelos
residuos_originales <- data.frame(
  tiempo = levaduras$tiempo,
  lineal = levaduras$densidad - predict(modelo_lineal),
  log_lineal = levaduras$densidad - exp(predict(modelo_log)),  # ¬°Transformar de vuelta!
  logistico = levaduras$densidad - predict(modelo_logistico)
)

# Calcular suma de cuadrados de residuos en escala original
rss_original <- sapply(residuos_originales[,-1], function(x) sum(x^2))
print(round(rss_original, 2))
```
:::

::: {.fragment}
**Ahora s√≠ podemos comparar correctamente** ‚úÖ
:::

---

## Residuos en escala original - Comparaci√≥n visual

::: {.fragment}
**Ahora podemos ver cu√°l modelo realmente ajusta mejor** üëÄ
:::

::: {.fragment}
::: {.columns}
::: {.column width = "60%"}
```{r}
#| echo: true
#| fig-height: 7
# Crear data frame para visualizaci√≥n
residuos_originales_plot <- data.frame(
  tiempo = rep(levaduras$tiempo, 3),
  residuos = c(residuos_originales$lineal, 
               residuos_originales$log_lineal, 
               residuos_originales$logistico),
  modelo = rep(c("Lineal", "Log-lineal", "Log√≠stico"), 
               each = nrow(levaduras))
)

p8 <- ggplot(residuos_originales_plot) +
  aes(x = tiempo, y = residuos, color = modelo) +
  geom_point(size = 2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~modelo) +
  labs(x = "Tiempo (horas)", 
       y = "Residuos (escala original)",
       title = "Residuos en Escala Original - Comparaci√≥n Justa"
    ) +
  theme(legend.position = "bottom")
```

:::
::: {.column width = "40%"}
```{r}
p8
```
:::
::: 
:::

## Residuos en escala original - Comparaci√≥n visual

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 6
p8
```


# Interpretaci√≥n Biol√≥gica

## Par√°metros del modelo log√≠stico

::: {.columns}
::: {.column}
::: {.fragment}

### Tasa, Capacidad de carga, densidad $t0$
```{r}
#| echo: true
# Extraer par√°metros estimados
params <- coef(modelo_logistico)
print(params)
```
:::

::: {.fragment}

### Intervalos de confianza
```{r}
#| echo: true
# Calcular intervalos de confianza
conf_int <- confint(modelo_logistico)
print(conf_int)
```
:::

:::
::: {.column}
::: {.fragment}
### Interpretaci√≥n biol√≥gica:  

- **K** ‚âà `r round(params["K"], 0)` c√©lulas/mL: Capacidad de carga del medio  
- **r** ‚âà `r round(params["r"], 3)` h‚Åª¬π: Tasa intr√≠nseca de crecimiento    
- **N‚ÇÄ** ‚âà `r round(params["N0"], 1)` c√©lulas/mL: Densidad inicial  
:::

<!-- ::: {.fragment}
### Parametros de simulacion:  

- **K** = `1000` c√©lulas/mL
- **r** = `0.3` h‚Åª¬π
- **N‚ÇÄ** = `10` c√©lulas/mL
::: -->

:::
::: 


---

## Tiempo de duplicaci√≥n

::: {.columns}
::: {.column}
::: {.fragment}
```{r}
#| echo: true
# Calcular tiempo de duplicaci√≥n
r_estimado <- params["r"]
tiempo_duplicacion <- log(2) / r_estimado

cat(
  "Tiempo de duplicaci√≥n:", 
  round(tiempo_duplicacion, 2), "horas\n"
)
```
:::

<!-- ::: {.fragment}
```{r}
# Tiempo para alcanzar 50% de la capacidad de carga
K_estimado <- params["K"]
N0_estimado <- params["N0"]
# Calcular la constanta logistica
A <- log((K_estimado - N0_estimado) / N0_estimado)
t_50_K <- A / r_estimado

cat(
  "Tiempo para alcanzar 50% de K:", 
  round(t_50_K, 2), "horas\n"
)
```
::: -->

::: {.fragment} 
::: {.incremental}
**Estas m√©tricas son importantes para:**  
- Optimizaci√≥n de cultivos  
- Predicci√≥n de rendimientos  
- Comparaci√≥n entre cepas  
:::
:::

:::
::: {.column}
::: {.fragment}
::: {.callout-note}
## üìö Leer m√°s:

<!-- **El punto de inflexi√≥n** de la curva log√≠stica ocurre exactamente en $K/2$. La f√≥rmula $t_{50\%} = \frac{\ln((K-N_0)/N_0)}{r}$ se deriva resolviendo la ecuaci√≥n log√≠stica para $N(t) = K/2$. -->

**Referencias recomendadas:**  
- **Gotelli, N.J.** (2008). *A Primer of Ecology*, 4th ed. Sinauer Associates. (Cap√≠tulo 2: Exponential and Logistic Population Growth)

<!-- **Nota importante:** La log√≠stica nunca alcanza exactamente $K$, solo se aproxima asint√≥ticamente. -->
:::
:::
:::
:::

---

# Conclusiones

## Lecciones aprendidas

::: {.incremental}
1. **Los modelos simples** (lineal) pueden ser inadecuados para procesos biol√≥gicos complejos

2. **Las transformaciones** (log-lineal) pueden mejorar el ajuste pero no capturan toda la biolog√≠a

3. **Los modelos mecan√≠sticos** (log√≠stico) incorporan conocimiento biol√≥gico y proporcionan par√°metros interpretables

4. **La evaluaci√≥n de modelos** requiere m√∫ltiples criterios, no solo R¬≤

5. **El contexto biol√≥gico** es crucial para la selecci√≥n del modelo apropiado
:::

---

## Pr√≥ximos pasos

**En sus proyectos de investigaci√≥n, consideren:**

- ¬øQu√© proceso biol√≥gico est√°n estudiando?
- ¬øQu√© tipo de relaci√≥n esperan te√≥ricamente?
- ¬øC√≥mo pueden validar sus modelos?
- ¬øLos par√°metros estimados tienen sentido biol√≥gico?

<!-- **Recursos adicionales:**
- Modelos de crecimiento poblacional
- Modelos dosis-respuesta  
- Modelos de competencia
- Modelos espaciales -->

## Bibliografia

**Gotelli, N.J.** (2008). *A Primer of Ecology*, 4th ed. Sinauer Associates. (Cap√≠tulo 2: Exponential and Logistic Population Growth)